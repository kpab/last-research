'''
12/1 作成
'''
import seaborn as sns
from modules.Constants_morning import WIDTH_HEATMAP, HEIGHT_HEATMAP
import japanize_matplotlib
from matplotlib.patches import Rectangle
import matplotlib.pyplot as plt
import numpy as np

normal_result = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 9, 70, 153, 302, 26], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 171, 939, 3708, 11912, 12523, 3155], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 88, 667, 2162, 5867, 8552, 2991, 420, 26], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 359, 1507, 3818, 6310, 6672, 6925, 12308, 12162, 3139], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 187, 1001, 2798, 4926, 6134, 7264, 8466, 8961, 3084, 783, 353], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 128, 707, 2309, 4343, 5912, 7429, 8678, 9178, 9007, 8691, 13175, 12659, 3787], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 126, 651, 2113, 4248, 5976, 7664, 8937, 10001, 10813, 11304, 11230, 9474, 4029, 50, 284], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 56, 529, 1882, 4279, 6275, 7934, 9460, 10264, 11708, 12599, 12939, 12381, 12167, 11961, 8036, 36, 204], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 329, 1698, 4116, 6472, 8168, 9784, 11093, 11997, 13207, 14510, 15010, 15080, 16047, 17400, 17628, 11005, 57, 214], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 426, 1253, 3635, 6623, 8784, 10361, 11651, 12165, 13046, 14323, 15364, 16789, 18248, 19786, 21257, 22121, 22015, 13633, 112, 148], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6934, 11926, 10268, 11682, 12934, 13622, 14055, 14682, 15454, 16526, 18690, 21195, 23458, 24263, 24824, 25723, 25236, 15033, 144, 155], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 60, 272, 877, 1826, 3412, 6760, 19013, 21625, 16986, 15887, 15763, 15753, 15552, 15911, 17310, 20236, 23273, 25685, 26479, 27332, 27436, 26876, 26303, 15637, 255, 231], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1086, 5962, 7166, 9567, 12982, 16339, 20928, 26008, 28620, 25146, 20959, 18514, 17399, 16717, 16708, 16952, 19645, 24268, 27463, 28679, 28555, 27509, 27026, 25838, 24265, 14753, 125, 1319], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1907, 12414, 7010, 10350, 14683, 17341, 19772, 22844, 25549, 26693, 24673, 20750, 18306, 17222, 16891, 16056, 16808, 23116, 27716, 29963, 30482, 28647, 26726, 24859, 22376, 19878, 11206, 189, 2493], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 3187, 16558, 7785, 11917, 16518, 19399, 20251, 21210, 23565, 25511, 25259, 21973, 18356, 16399, 15638, 15038, 14045, 17226, 26271, 32661, 33970, 32238, 28348, 24060, 21193, 18274, 14620, 10623, 3261, 3142], [0, 0, 0, 17, 19, 16, 6, 0, 0, 0, 0, 0, 0, 0, 0, 150, 30, 34, 1287, 7484, 21695, 9929, 12690, 18553, 22508, 22639, 21319, 20902, 21407, 23236, 22663, 18742, 15116, 14270, 13298, 12443, 11120, 17449, 28165, 37383, 39234, 36275, 30119, 23322, 13770, 6879, 2731, 1016, 381, 502], [0, 0, 5, 17, 44, 32, 68, 41, 91, 265, 616, 1120, 1911, 2733, 3467, 2798, 6241, 10673, 19172, 28853, 13471, 14100, 19321, 23452, 28404, 27810, 21247, 17424, 15516, 15301, 14955, 11639, 10601, 10529, 9784, 8511, 7290, 16389, 29395, 39651, 40282, 37882, 16921, 17833, 16015, 6827, 484, 7, 2, 2], [0, 0, 16, 28, 1, 0, 283, 5800, 7547, 9826, 12186, 14036, 15527, 17616, 22362, 25003, 23859, 24838, 27069, 22070, 18350, 18978, 20425, 25560, 28483, 10706, 5031, 3239, 2635, 4211, 2974, 3581, 5787, 6290, 5637, 4261, 5902, 14402, 27248, 33993, 35631, 32350, 8288, 198, 104, 29, 0, 0, 0, 0], [0, 0, 20, 27, 1, 0, 357, 8014, 10033, 10792, 11486, 14765, 17934, 20253, 21078, 21338, 21990, 21974, 20883, 19735, 18711, 18341, 21728, 20300, 1014, 1, 0, 0, 42, 392, 2, 151, 3257, 4941, 3629, 5377, 8007, 11909, 22854, 29227, 29461, 27071, 3652, 70, 10, 0, 0, 0, 0, 0], [0, 0, 9, 33, 3, 99, 1538, 9921, 10314, 11996, 15922, 18460, 19948, 19619, 19374, 18920, 18555, 17955, 17406, 16674, 15575, 17441, 13780, 202, 0, 0, 0, 16, 62, 33, 0, 34, 3282, 3717, 6036, 8370, 8820, 9925, 17634, 23887, 23722, 26307, 5702, 57, 5, 0, 0, 0, 0, 0], [0, 0, 7, 13, 93, 1645, 6917, 11869, 13709, 15539, 19120, 19616, 17766, 16567, 15711, 15128, 14104, 13073, 12134, 10822, 10044, 6296, 18, 0, 0, 0, 0, 4, 48, 26, 22, 671, 3102, 7391, 9029, 8616, 7972, 6999, 9480, 16624, 18993, 25037, 6498, 61, 1, 0, 0, 0, 0, 0], [0, 0, 5, 25, 579, 15407, 13545, 11440, 13085, 16873, 24019, 23347, 17967, 14341, 11223, 8478, 6440, 4869, 3518, 2264, 982, 1, 0, 0, 0, 0, 0, 0, 12, 10, 429, 2422, 9921, 8965, 7974, 8322, 6016, 2728, 2209, 9345, 15523, 23507, 5808, 51, 0, 0, 0, 0, 0, 0], [0, 0, 14, 39, 1019, 21641, 14147, 14242, 13858, 17605, 20842, 2929, 510, 297, 686, 431, 302, 207, 68, 13, 0, 0, 0, 0, 0, 0, 0, 0, 5, 18, 2344, 19561, 6803, 8296, 9059, 4442, 1568, 440, 335, 3934, 12226, 20910, 4753, 72, 11, 0, 0, 0, 0, 0], [0, 0, 0, 15, 1097, 22545, 13622, 13468, 13148, 17760, 21409, 171, 73, 19, 66, 60, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 14, 2262, 8411, 11211, 8238, 2447, 911, 215, 19, 37, 1062, 6738, 18017, 3769, 73, 52, 0, 0, 0, 0, 0], [0, 0, 0, 0, 681, 23442, 16173, 10652, 6573, 5243, 10941, 8, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1929, 19621, 5127, 1336, 557, 81, 3, 0, 8, 423, 1441, 9321, 2961, 43, 64, 2, 0, 0, 0, 0], [0, 0, 0, 0, 32, 5589, 426, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1893, 6208, 743, 297, 20, 0, 0, 0, 24, 376, 340, 170, 1418, 60, 63, 5, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 86, 47, 1, 0, 0, 0, 0, 0, 370, 514, 270, 89, 77, 68, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 385, 422, 145, 55, 20, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 47, 29, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] # 通常の踏まれた地点の二次元リスト

# ヒートマップの差の出力
def GappingHeatmap(now_agents_positions, walls, fig_name):
    global normal_result
    normal_result = np.array(normal_result)
    now_agents_positions = np.array(now_agents_positions)
    
    gap = now_agents_positions - normal_result

    fig2, ax2 = plt.subplots(figsize=(12.0, 8.0),
                           facecolor="gainsboro")
    
    ax2.set_xlim(0, WIDTH_HEATMAP)
    ax2.set_ylim(0, HEIGHT_HEATMAP)

    ax2.set_title("~ヒートマップの差~")
    ax2 = sns.heatmap(gap, cmap='bwr',cbar=False, annot=True, fmt='d', annot_kws={'fontsize':4.0})
    for wall in walls:
            ax2.add_patch(Rectangle((wall[0]/10, wall[1]/10), (wall[2]-wall[0])/10, (wall[3]-wall[1])/10))
    ax2.invert_yaxis()
    # plt.show()
    fig2.savefig(f"{fig_name}_gap.png", dpi=300)



def GappingHakohige(now_agents_positions, fig_name, type_name):
    global normal_result
      # 二次元を一次元に変換
    now_agents_positions = sum(now_agents_positions, [])
    # 0を除去
    now_agents_positions = list(filter(lambda x: x!=0, now_agents_positions))
    now_agents_positions = np.array(now_agents_positions) # numpy配列に変換

    normal_result = normal_result.flatten()
    numpy_normal = list(filter(lambda x: x!=0, normal_result))
    # numpy_normal = np.array(normal_result)

    data = (numpy_normal, now_agents_positions)
    # 箱ひげ図のプロット
    fig4, ax = plt.subplots()
    ax.boxplot(now_agents_positions, whis=[0, 100],vert=False, showmeans=True)  # 横向き, 外れ値表記しないver
    ax.set_title('箱ひげ図(外れ値あり)')
    ax.set_xlabel('通過人数')
    ax.set_ylabel(["normal", type_name])

    fig4.savefig(f"{fig_name}_hakogap.png")



     



# 箱ひげ図
def GappingHakohigeHazure(now_agents_positions, fig_name, type_name):
    global normal_result
      # 二次元を一次元に変換
    now_agents_positions = sum(now_agents_positions, [])
    # 0を除去
    now_agents_positions = list(filter(lambda x: x!=0, now_agents_positions))
    now_agents_positions = np.array(now_agents_positions) # numpy配列に変換

    normal_result = normal_result.flatten()
    numpy_normal = list(filter(lambda x: x!=0, normal_result))
    # numpy_normal = np.array(normal_result)

    data = (numpy_normal, now_agents_positions)
    # 箱ひげ図のプロット
    fig4, ax = plt.subplots()
    ax.boxplot(data, vert=False, showmeans=True, whis=1.3)  # 横向き, 外れ値表記
    ax.set_title('箱ひげ図(外れ値あり)')
    ax.set_xlabel('通過人数')
    ax.set_ylabel(["normal", type_name])

    fig4.savefig(f"{fig_name}_hakohazuregap.png")


